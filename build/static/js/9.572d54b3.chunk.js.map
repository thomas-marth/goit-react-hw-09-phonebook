{"version":3,"sources":["components/LoginPage/LoginPage.js"],"names":["LoginPage","dispatch","useDispatch","useState","email","password","inputValues","setInputValues","handleChange","useCallback","target","name","value","handleSubmit","e","preventDefault","loginUser","className","xs","lg","Group","controlId","Label","Control","type","placeholder","suggested","autoComplete","onChange","Text","variant","onClick"],"mappings":"6SAMe,SAASA,IACtB,IAAMC,EAAWC,cADiB,EAGIC,mBAAS,CAC7CC,MAAO,GACPC,SAAU,KALsB,mBAG3BC,EAH2B,KAGdC,EAHc,KAQ5BC,EAAeC,uBACnB,YAAiB,IAAdC,EAAa,EAAbA,OACDH,EAAe,2BAAKD,GAAN,kBAAoBI,EAAOC,KAAOD,EAAOE,WAEzD,CAACN,IAKGO,EAAeJ,uBACnB,SAACK,GACCA,EAAEC,iBAEFd,EAASe,YAAUV,IAEnBC,EAAe,CAAEI,KAAM,GAAIN,SAAU,OAEvC,CAACJ,EAAUK,IASb,OACE,eAAC,IAAD,WACE,uBACA,cAAC,IAAD,CAAKW,UAAU,4BAAf,SACE,eAAC,IAAD,CAAKC,IAAE,EAACC,GAAG,IAAX,UACE,0DACA,eAAC,IAAD,WACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC,IAAKC,MAAN,oBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,QACLC,YAAY,mDACZC,UAAU,QACVf,KAAK,QACLC,MAAON,EAAYF,MACnBuB,aAAa,QACbC,SAAUpB,IAEZ,cAAC,IAAKqB,KAAN,CAAWZ,UAAU,aAArB,iSAIF,eAAC,IAAKG,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAAC,IAAKC,MAAN,mDACA,cAAC,IAAKC,QAAN,CACEC,KAAK,WACLC,YAAY,kFACZC,UAAU,WACVf,KAAK,WACLC,MAAON,EAAYD,SACnBsB,aAAa,WACbC,SAAUpB,OAWd,cAAC,IAAD,CAAQsB,QAAQ,UAAUN,KAAK,SAASO,QAASlB,EAAjD","file":"static/js/9.572d54b3.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../redux/contacts/contactsOperations\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputValues, setInputValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = useCallback(\r\n    ({ target }) => {\r\n      setInputValues({ ...inputValues, [target.name]: target.value });\r\n    },\r\n    [inputValues]\r\n  );\r\n\r\n  // const [checked, setChecked] = useState();\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n\r\n      dispatch(loginUser(inputValues));\r\n\r\n      setInputValues({ name: \"\", password: \"\" });\r\n    },\r\n    [dispatch, inputValues]\r\n  );\r\n\r\n  // handleCheked = (e) => {\r\n  //   const { statusRemember } = this.props;\r\n  //   const check = e.target.checked;\r\n  //   statusRemember(check);\r\n  // };\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs lg=\"5\">\r\n          <h2>Вход</h2>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Введите email\"\r\n                suggested=\"email\"\r\n                name=\"email\"\r\n                value={inputValues.email}\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Мы никому не передаем адрес вашей электронной почты.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Пароль</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Введите пароль\"\r\n                suggested=\"password\"\r\n                name=\"password\"\r\n                value={inputValues.password}\r\n                autoComplete=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Запомнить меня\"\r\n                checked={checked}\r\n                onChange={setChecked}\r\n              />\r\n            </Form.Group> */}\r\n            <Button variant=\"primary\" type=\"button\" onClick={handleSubmit}>\r\n              Войти\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}