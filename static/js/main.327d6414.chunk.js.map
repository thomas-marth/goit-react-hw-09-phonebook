{"version":3,"sources":["components/Navigation/UserMenu.js","redux/status/statusSelectors.js","components/Navigation/PublicMenu.js","components/Navigation/Navigation.js","components/Layout.js","components/PublicRoutes.js","components/PrivateRoutes.js","components/AlertPage/ErrorMessage.js","App.js","redux/contacts/contactsReducer.js","redux/status/statusReducer.js","redux/store.js","index.js","redux/status/statusActions.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsOperations.js","redux/contacts/contactsActions.js","routes.js"],"names":["UserMenu","user","useSelector","getUserInfo","Nav","variant","defaultActiveKey","className","Link","eventKey","disabled","name","email","Item","to","routes","contacts","logout","Spinner","animation","getStatusLogOn","state","status","logOn","PublicMenu","register","login","Navigation","home","Layout","children","connect","Component","component","redirectTo","routeProps","render","props","restricted","ErrorMessage","error","Alert","Heading","StartPage","lazy","UserPage","LoginPage","RegistrationPage","ContactList","LogOut","App","this","getUser","token","message","setTimeout","registrationError","fallback","path","exact","PublicRoutes","PrivateRoutes","mapDispatchToProps","getUserToken","getErrorMessage","initialState","filter","contactsReducer","createReducer","registrationSuccess","action","payload","loginSuccess","loginError","getUserSuccess","getUserError","logoutSuccess","logoutError","addContactsSuccess","getContactsSuccess","addContactsError","getContactsError","removeContactsSuccess","contact","id","removeContactsError","getFilterValue","statusReducer","remember","statusLogOn","statusRemember","userBookConfig","key","storage","whitelist","statusConfig","store","configureStore","reducer","userBook","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","createAction","getUserContacts","getContactsFilter","axios","defaults","baseURL","tokenSet","headers","common","Authorization","registrationUser","dispatch","registrationRequest","post","then","response","data","catch","loginUser","loginRequest","getUserRequest","get","logoutUser","logoutRequest","addUserContact","addContactsRequest","getContacts","getContactsRequest","removeContact","removeContactsRequest","delete"],"mappings":"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","file":"static/js/main.327d6414.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport routes from \"../../routes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { getUserInfo } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nexport default function UserMenu() {\r\n  const user = useSelector(getUserInfo);\r\n\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <Spinner animation=\"border\" />\r\n      ) : (\r\n        <Nav\r\n          variant=\"tabs\"\r\n          defaultActiveKey=\"/home\"\r\n          className=\"justify-content-center\"\r\n        >\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            Привет {user.name}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            Email: {user.email}\r\n          </Nav.Link>\r\n          <Nav.Item>\r\n            <Link to={routes.contacts} className=\"nav-link\">\r\n              Мои контакты\r\n            </Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Link to={routes.logout} className=\"nav-link\">\r\n              Выйти\r\n            </Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","const getStatusLogOn = (state) => state.status.logOn;\r\nconst getStatusRemember = (state) => state.status.remember;\r\n\r\nexport { getStatusLogOn, getStatusRemember };\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport routes from \"../../routes\";\r\n\r\nfunction PublicMenu({ user }) {\r\n  return (\r\n    <Nav\r\n      variant=\"tabs\"\r\n      defaultActiveKey=\"/home\"\r\n      className=\"justify-content-end\"\r\n    >\r\n      <Nav.Item>\r\n        <Link to={routes.register} className=\"nav-link\">\r\n          Регистрация\r\n        </Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Link to={routes.login} className=\"nav-link\">\r\n          Вход\r\n        </Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default PublicMenu;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport routes from \"../../routes\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../../redux/status/statusSelectors\";\r\nimport PublicMenu from \"./PublicMenu\";\r\n\r\nexport default function Navigation() {\r\n  const logOn = useSelector(getStatusLogOn);\r\n\r\n  return (\r\n    <>\r\n      <Nav\r\n        variant=\"tabs\"\r\n        defaultActiveKey=\"/home\"\r\n        className=\"justify-content-between\"\r\n      >\r\n        <Nav.Item>\r\n          <Link to={routes.home} className=\"nav-link\">\r\n            Главная\r\n          </Link>\r\n        </Nav.Item>\r\n        {logOn ? <UserMenu /> : <PublicMenu />}\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Navigation />\r\n    <main>{children}</main>\r\n  </>\r\n);\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../redux/status/statusSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  logOn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      logOn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logOn: getStatusLogOn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../redux/status/statusSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  logOn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      logOn ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logOn: getStatusLogOn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction ErrorMessage({ error }) {\r\n  return (\r\n    <Alert variant=\"danger\">\r\n      <Alert.Heading>Упс, что-то сломалось!</Alert.Heading>\r\n      <p>{error}</p>\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Suspense, lazy, Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout\";\r\nimport routes from \"./routes\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserToken,\r\n  getErrorMessage,\r\n} from \"./redux/contacts/contactsSelectors\";\r\nimport { getUser } from \"./redux/contacts/contactsOperations\";\r\nimport { registrationError } from \"./redux/contacts/contactsActions\";\r\nimport { getStatusLogOn } from \"./redux/status/statusSelectors\";\r\nimport PublicRoutes from \"./components/PublicRoutes\";\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\nimport ErrorMessage from \"./components/AlertPage/ErrorMessage\";\r\n\r\nconst StartPage = lazy(() => import(\"./components/HomePage/StartPage\"));\r\nconst UserPage = lazy(() => import(\"./components/HomePage/UserPage\"));\r\nconst LoginPage = lazy(() => import(\"./components/LoginPage/LoginPage\"));\r\nconst RegistrationPage = lazy(() =>\r\n  import(\"./components/RegistrationPage/RegistrationPage\")\r\n);\r\nconst ContactList = lazy(() => import(\"./components/Contacts/ContactList\"));\r\nconst LogOut = lazy(() => import(\"./components/AlertPage/LogOut\"));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getUser(this.props.token);\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.message) {\r\n      return setTimeout(() => {\r\n        this.props.registrationError(null);\r\n      }, 3000);\r\n    }\r\n  }\r\n  render() {\r\n    const { logOn, message } = this.props;\r\n    return (\r\n      <>\r\n        <Layout>\r\n          <Suspense\r\n            fallback={\r\n              <div>\r\n                <Spinner animation=\"border\" />\r\n              </div>\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route\r\n                path={routes.home}\r\n                exact\r\n                component={logOn ? UserPage : StartPage}\r\n              />\r\n              <PublicRoutes\r\n                path={routes.home}\r\n                exact\r\n                restricted\r\n                redirectTo={routes.contacts}\r\n                component={logOn ? UserPage : StartPage}\r\n              />\r\n              <PublicRoutes\r\n                path={routes.login}\r\n                restricted\r\n                redirectTo={routes.home}\r\n                component={LoginPage}\r\n              />\r\n              <PublicRoutes\r\n                path={routes.register}\r\n                restricted\r\n                redirectTo={routes.home}\r\n                component={RegistrationPage}\r\n              />\r\n              <PrivateRoutes\r\n                path={routes.contacts}\r\n                redirectTo={routes.login}\r\n                component={ContactList}\r\n              />\r\n              <PrivateRoutes\r\n                path={routes.logout}\r\n                redirectTo={routes.login}\r\n                component={LogOut}\r\n              />\r\n              <Redirect to={routes.home} />\r\n            </Switch>\r\n          </Suspense>\r\n        </Layout>\r\n        {message && <ErrorMessage error={message} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: getUserToken(state),\r\n    logOn: getStatusLogOn(state),\r\n    message: getErrorMessage(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  registrationError,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  registrationSuccess,\r\n  loginSuccess,\r\n  getUserSuccess,\r\n  logoutSuccess,\r\n  registrationError,\r\n  loginError,\r\n  getUserError,\r\n  logoutError,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n} from \"../contacts/contactsActions\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  contacts: [],\r\n  error: null,\r\n  filter: \"\",\r\n};\r\n\r\nconst contactsReducer = createReducer(\r\n  { user: null, token: null, contacts: [], error: null, filter: \"\" },\r\n  {\r\n    [registrationSuccess]: (state, action) => ({\r\n      ...state,\r\n      ...action.payload,\r\n    }),\r\n    [registrationError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [loginSuccess]: (state, action) => ({ ...state, ...action.payload }),\r\n    [loginError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [getUserSuccess]: (state, action) => ({\r\n      ...state,\r\n      user: action.payload,\r\n    }),\r\n    [getUserError]: (state, action) => ({ ...state, ...action.payload }),\r\n    [logoutSuccess]: () => ({\r\n      ...initialState,\r\n    }),\r\n    [logoutError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [addContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: [...state.contacts, action.payload],\r\n    }),\r\n    [getContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: action.payload,\r\n    }),\r\n    [addContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [getContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [removeContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: [\r\n        ...state.contacts.filter((contact) => {\r\n          return contact.id !== action.payload;\r\n        }),\r\n      ],\r\n    }),\r\n    [removeContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [getFilterValue]: (state, action) => ({\r\n      ...state,\r\n      filter: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { statusLogOn, statusRemember } from \"../status/statusActions\";\r\n\r\nconst statusReducer = createReducer(\r\n  { logOn: false, remember: false },\r\n  {\r\n    [statusLogOn]: (state, action) => ({\r\n      ...state,\r\n      logOn: action.payload,\r\n    }),\r\n    [statusRemember]: (state, action) => ({\r\n      ...state,\r\n      remember: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default statusReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport statusReducer from \"./status/statusReducer\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst userBookConfig = {\r\n  key: \"userBook\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst statusConfig = {\r\n  key: \"status\",\r\n  storage,\r\n  whitelist: [\"remember\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    userBook: persistReducer(userBookConfig, contactsReducer),\r\n    status: persistReducer(statusConfig, statusReducer),\r\n  },\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  ],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <PersistGate\r\n        loading={<Spinner animation=\"border\" />}\r\n        persistor={persistor}\r\n      >\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst statusLogOn = createAction(\"CHENGE_STATUS_LOGON\");\r\nconst statusRemember = createAction(\"CHENGE_STATUS_REMEMBER\");\r\n\r\nexport { statusLogOn, statusRemember };\r\n","const getUserToken = (state) => state.userBook.token;\r\nconst getUserInfo = (state) => state.userBook.user;\r\nconst getUserContacts = (state) => state.userBook.contacts;\r\nconst getContactsFilter = (state) => state.userBook.filter;\r\nconst getErrorMessage = (state) => state.userBook.error;\r\n\r\nexport {\r\n  getUserToken,\r\n  getUserInfo,\r\n  getUserContacts,\r\n  getContactsFilter,\r\n  getErrorMessage,\r\n};\r\n","import {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contactsActions\";\r\nimport { statusLogOn } from \"../status/statusActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst tokenSet = (token) =>\r\n  (axios.defaults.headers.common.Authorization = `Bearer ${token}`);\r\nconst tokenUnset = () => (axios.defaults.headers.common.Authorization = \"\");\r\n\r\nconst registrationUser = (user) => (dispatch) => {\r\n  dispatch(registrationRequest());\r\n  axios\r\n    .post(\"/users/signup\", user)\r\n    .then((response) => {\r\n      tokenSet(response.data.token);\r\n      dispatch(statusLogOn(true));\r\n      dispatch(registrationSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(registrationError(error.message)));\r\n};\r\n\r\nconst loginUser = (user) => (dispatch) => {\r\n  dispatch(loginRequest());\r\n  axios\r\n    .post(\"/users/login\", user)\r\n    .then((response) => {\r\n      tokenSet(response.data.token);\r\n      dispatch(statusLogOn(true));\r\n      dispatch(loginSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(loginError(error.message)));\r\n};\r\n\r\nconst getUser = (token) => (dispatch) => {\r\n  if (!token) {\r\n    dispatch(statusLogOn(false));\r\n    return;\r\n  }\r\n  tokenSet(token);\r\n  dispatch(statusLogOn(true));\r\n  dispatch(getUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then((response) => {\r\n      dispatch(getUserSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(getUserError(error.message)));\r\n};\r\n\r\nconst logoutUser = () => (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      tokenUnset();\r\n      dispatch(statusLogOn(false));\r\n      dispatch(logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(logoutError(error.message)));\r\n};\r\n\r\nconst addUserContact = (contact) => (dispatch) => {\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst getContacts = (token) => (dispatch) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  tokenSet(token);\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then((response) => {\r\n      dispatch(getContactsSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error.message)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactsSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactsError(error.message)));\r\n};\r\n\r\nexport {\r\n  registrationUser,\r\n  loginUser,\r\n  getUser,\r\n  logoutUser,\r\n  addUserContact,\r\n  addContactsError,\r\n  getContacts,\r\n  removeContact,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// User Action\r\n\r\nconst registrationRequest = createAction(\"userBook/registrationRequest\");\r\nconst registrationSuccess = createAction(\"userBook/registrationSuccess\");\r\nconst registrationError = createAction(\"userBook/registrationError\");\r\n\r\nconst loginRequest = createAction(\"userBook/loginRequest\");\r\nconst loginSuccess = createAction(\"userBook/loginSuccess\");\r\nconst loginError = createAction(\"userBook/loginError\");\r\n\r\nconst getUserRequest = createAction(\"userBook/getUserRequest\");\r\nconst getUserSuccess = createAction(\"userBook/getUserSuccess\");\r\nconst getUserError = createAction(\"userBook/getUserError\");\r\n\r\nconst logoutRequest = createAction(\"userBook/logoutRequest\");\r\nconst logoutSuccess = createAction(\"userBook/logoutSuccess\");\r\nconst logoutError = createAction(\"userBook/logoutError\");\r\n\r\n// Contacts Action\r\n\r\nconst addContactsRequest = createAction(\"userBook/addRequest\");\r\nconst addContactsSuccess = createAction(\"userBook/addSuccess\");\r\nconst addContactsError = createAction(\"userBook/addError\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst getFilterValue = createAction(\"FILTER_ITEM\");\r\n\r\nexport {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n};\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  home: \"/\",\r\n  login: \"/login\",\r\n  register: \"/registration\",\r\n  contacts: \"/contacts\",\r\n  logout: \"/logout\",\r\n};\r\n"],"sourceRoot":""}